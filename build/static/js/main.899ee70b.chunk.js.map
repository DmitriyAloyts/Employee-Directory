{"version":3,"sources":["components/Header/Header.js","components/Table/components/TableRow/TableRow.js","components/Table/tableContext.js","components/Table/components/TableHeader/TableHeader.js","AppContext.js","components/Table/Table.js","components/SearchInput/SearchInput.js","App.js","index.js"],"names":["Header","TableRow","props","person","name","phone","email","nat","first","last","TableContext","React","createContext","EventContext","TableHeader","tableContext","useContext","eventContext","text","sortBy","sortOrder","data-id","onClick","onTableHeaderClick","AppContext","Table","useState","setSortBy","setSortOrder","searchText","event","id","currentTarget","getAttribute","undefined","toBeDisplayedData","data","filter","RegExp","test","sortOrderModifier","sort","a","b","aName","bName","localeCompare","Provider","value","border","map","key","SearchInput","appContext","onChange","onSearchInputChange","App","setSearchText","ev","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.899ee70b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return (\n    <div>Employee Directory</div>\n  )\n}","import React from \"react\";\n\nexport default function TableRow(props) {\n  const {\n    person: {\n      name,\n      phone,\n      email,\n      nat\n    }\n  } = props;\n\n\n  return (\n    <tr>\n      <td>{`${name.first} ${name.last}`}</td>\n      <td>{email}</td>\n      <td>{phone}</td>\n      <td>{nat}</td>\n    </tr>\n  )\n  \n}","import React from \"react\";\n\nexport const TableContext = React.createContext();\nexport const EventContext = React.createContext();","import React from \"react\";\nimport { EventContext, TableContext } from \"../../tableContext\";\n\nexport default function TableHeader(props) {\n  const tableContext = React.useContext(TableContext)\n  const eventContext = React.useContext(EventContext);\n\n  const {\n    text\n  } = props;\n\n  const {\n    sortBy,\n    sortOrder\n  } = tableContext;\n\n  return (\n    <th\n      data-id={text}\n      onClick={eventContext.onTableHeaderClick}\n    >\n      {text}\n      { sortBy === text && sortOrder }\n    </th>\n  )\n}","import React from \"react\";\n\nexport const AppContext = React.createContext();\nexport const EventContext = React.createContext();","import React from \"react\";\n\nimport data from \"../../data.json\";\n\nimport TableRow from \"./components/TableRow/TableRow\";\nimport TableHeader from \"./components/TableHeader/TableHeader\";\nimport { EventContext, TableContext } from \"./tableContext\";\nimport { AppContext } from \"../../AppContext\";\n\nexport default function Table() {\n  const [sortBy, setSortBy] = React.useState();\n  const [sortOrder, setSortOrder] = React.useState();\n\n  const { searchText } = React.useContext(AppContext);\n\n  const handleTableHeaderClick = (event) => {\n    const target = event.currentTarget;\n    const id = target.getAttribute(\"data-id\");\n\n    if(id === sortBy) {\n      switch (sortOrder) {\n        case \"ASC\":\n          setSortOrder(\"DESC\");\n          break;\n        case \"DESC\":\n          setSortOrder(undefined);\n          setSortBy(undefined);\n          break;\n        default:\n          break;\n      }\n    } else {\n      setSortBy(id);\n      setSortOrder(\"ASC\");\n    }\n  }\n\n  const tableContext = {\n    sortBy,\n    sortOrder\n  }\n\n  const eventContext = {\n    onTableHeaderClick: handleTableHeaderClick\n  };\n\n  let toBeDisplayedData = [...data];\n\n  //Filter on email\n  if(searchText !== \"\") {\n    toBeDisplayedData = toBeDisplayedData.filter(({ email }) => new RegExp(searchText, 'g').test(email))\n  }\n\n\n  //Sort\n\n  const sortOrderModifier = sortOrder === \"ASC\" ? 1 : -1;\n  switch (sortBy) {\n    case \"Name\":\n      toBeDisplayedData = toBeDisplayedData.sort((a, b) => {\n        const aName = `${a.name.first} ${a.name.last}`;\n        const bName = `${b.name.first} ${b.name.last}`;\n        return aName.localeCompare(bName) * sortOrderModifier;\n      })\n      break;\n    case \"Email\":\n      toBeDisplayedData = toBeDisplayedData.sort((a, b) => a.email.localeCompare(b.email) * sortOrderModifier)\n      break;\n    case \"Phone\":\n      toBeDisplayedData = toBeDisplayedData.sort((a, b) => a.phone.localeCompare(b.phone) * sortOrderModifier)\n      break;\n    case \"Nationality\":\n      toBeDisplayedData = toBeDisplayedData.sort((a, b) => a.nat.localeCompare(b.nat) * sortOrderModifier)\n      break;\n  \n    default:\n      break;\n  }\n\n  return (\n    <TableContext.Provider value={tableContext}>\n      <EventContext.Provider value={eventContext}>\n        <table\n          border=\"1\"\n        >\n          <thead>\n            <tr>\n              <TableHeader \n                text=\"Name\"\n              />\n              <TableHeader \n                text=\"Email\"\n              />\n              <TableHeader \n                text=\"Phone\"\n              />\n              <TableHeader \n                text=\"Nationality\"\n              />\n            </tr>\n          </thead>\n          <tbody>\n              {\n                toBeDisplayedData.map((person) => (\n                  <TableRow\n                    key={person.phone}\n                    person={person}\n                  />\n                ))\n              }\n          </tbody>\n        </table>\n      </EventContext.Provider>  \n    </TableContext.Provider>\n  )\n}","import React from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { EventContext } from \"../Table/tableContext\";\n\nexport default function SearchInput() {\n  const appContext = React.useContext(AppContext);\n  const eventContext = React.useContext(EventContext);\n\n  return (\n    <input\n      value={appContext.searchText}\n      onChange={eventContext.onSearchInputChange}\n    />\n  )\n}","import React from 'react';\nimport './App.css';\n\nimport Header from \"./components/Header/Header\";\nimport Table from './components/Table/Table';\nimport SearchInput from './components/SearchInput/SearchInput';\nimport { AppContext } from './AppContext';\nimport { EventContext } from './components/Table/tableContext';\n\nexport default function App() {\n  const [searchText, setSearchText] = React.useState(\"\");\n\n  const handleSearchInputChange = (ev) => {\n\n    setSearchText(ev.currentTarget.value);\n\n  }\n  \n  const appContext = {\n    searchText\n  };\n\n  const eventContext = {\n    onSearchInputChange: handleSearchInputChange\n  };\n\n  return (\n    <AppContext.Provider value={appContext}>\n      <EventContext.Provider value={eventContext}>\n        <div className=\"App\">\n          <Header />\n          <SearchInput />\n          <Table />\n        </div>\n      </EventContext.Provider>\n    </AppContext.Provider>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}